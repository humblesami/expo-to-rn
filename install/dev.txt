# All instructions (except links and text comments) needed to be run in terminal

**Install JAVA**

https://www.oracle.com/kw/java/technologies/javase/jdk11-archive-downloads.html#license-lightbox

Jdk11 (.deb file for ubuntu)

# Should be installed here by default
/usr/lib/jvm/java-11-openjdk-amd64

====================================================================

**NodeJS**

sudo apt install curl
curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
source ~/.bashrc 

nvm install node
sudo apt install -y npm

nvm install v16.20.2
npm install --global yarn

Switch version

nvm alias default 16.20.2
echo "16.20.2" > ~/.nvmrc
nvm use

====================================================================

**Install Android SDK**

https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip

Install at home => ~/Android/Sdk (should go here by default)

cd ~/Android/Sdk
Install any package as
./cmdline-tools/latest/bin/sdkmanager packagename

Example:
./cmdline-tools/latest/bin/sdkmanager tools
./cmdline-tools/latest/bin/sdkmanager platform-tools

====================================================================

**Set paths**

echo $HOME

nano ~/.bashrc

export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
export PATH=${PATH}:${JAVA_HOME}/bin

export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME/platform-tools
export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin

source ~/.bashrc

echo $JAVA_HOME
echo $ANDROID_HOME

Check Versions/Installations

Now you should be able to find following commands valid in terminal

java --version
node --version
sdkmanager --version
avdmanager list targets
# to list devices attached via usb cable
adb devices

API Level vs android version
https://apilevels.com/
Android: 13,14		=>	SDK: 33,34
Android:12			=>	SDK: 31-32 (both)
Android: 9,10,11		=>	SDK: 28,29,30
Install expo
npx expo start

====================================================================

**Run this app**

git clone https://github.com/humblesami/expo-to-rn.git
cd expo-to-rn
yarn install
# attach your android device to PC
adb devices
nxp react-native run-android
nxp react-native start
# press r 
====================================================================

Init react-native app using expo (Recommended)

https://docs.expo.dev/get-started/installation/#requirements

#if you have installed yarn

yarn create expo

#otherwise

npx create-expo-app --template

Old method (still valid)

npx react-native init rn1

====================================================================

Attach Android Phone with usb cable
To Use APIs
Localhost API server
Run following command
adb reverse tcp:8000 tcp:8000

If above gives any error or no response at all then
For troubleshooting

lsub
adb devices

Run App
#npm run android
npx react-native run-android
npx react-native start
Press r to run on android
react-native start --reset-cache

adb start-server
yarn add expo-cli
npx expo start --localhost --android

====================================================================
Convert App to simple react-native

yarn global add react-native-cli

https://github.com/humblesami/expo-to-rn/commit/ea656ba02182873ffecb5f2cb98682d30987e90a

npx expo prebuild
yarn add @react-native/metro-config

nano metro.config.js
const {getDefaultConfig, mergeConfig} = require('@react-native/metro-config');
const config = {};
module.exports = mergeConfig(getDefaultConfig(__dirname), config);


nano index.ts
import { registerRootComponent } from 'expo';
import App from './App';
registerRootComponent(App);


ReBuild/Clean/RUN
cd android && ./gradlew clean && cd ..
npx react-native run-android
npx react-native start

====================================================================

Generate SHA1 Generate keys SHA1

keytool -list -v -keystore android/app/debug.keystore -alias androiddebugkey -storepass android -keypass android

Keytool should be available when java installed for issues look
https://stackoverflow.com/questions/16333635/keytool-error-bash-keytool-command-not-found


Release APK

react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res

./gradlew clean && ./gradlew assembleRelease


====================================================================

Publish

expo push:android:upload --api-key ABC:XYZ

Key Store
keytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000

eas build

====================================================================

Expo Push Notifications
expo push:android:upload --api-key server-key from Firebase Setting1

====================================================================

Cloud Configurations

Google Apis
https://console.cloud.google.com/apis/dashboard

Expo apps
https://expo.dev/accounts/humblesami/projects

Firebase console
https://console.firebase.google.com/

Add app to firebase console
https://console.firebase.google.com/project/push-4cb3e/settings/general/android:com.hope.tts


Cloud messaging Server Key
https://console.firebase.google.com/project/push-4cb3e/settings/cloudmessaging/android:com.hope.tts


npx react-native init rn1


when connected using usb cable we can enable app to access server APIs running at port 8000 as
adb reverse tcp:8000 tcp:8000

npx react-native run-android
npx react-native start

#some times
react-native start --reset-cache


Version package budeling deployment management

app.json
package.json
metro.config.js

android/build.gradle
android/gradle/wrapper/gradle-wrapper.properties

android/gradlew
android/gradle.properties
android/gradlew.bat
android/app/build.gradle
android/settings.gradle

cd android && ./gradlew clean && cd ..
npx react-native run-android
npx react-native start